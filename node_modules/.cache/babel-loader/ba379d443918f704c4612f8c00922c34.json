{"ast":null,"code":"var _jsxFileName = \"D:\\\\Crud\\\\crud\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport db from './firebase-config';\nimport firebase from 'firebase/compat/app';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [userInfo, setuserInfo] = useState({\n    title: '',\n    description: ''\n  });\n  const [isUsers, setUsers] = useState([]);\n  const [isOpen, setOpen] = useState(false);\n  const [isEdit, setEdit] = useState(null);\n\n  const onChangeValue = e => {\n    setuserInfo({ ...userInfo,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  {\n    /* Fetch ------------------------------------------- */\n  }\n  useEffect(() => {\n    db.collection('users').orderBy('datetime', 'desc').onSnapshot(snapshot => {\n      setUsers(snapshot.docs.map(doc => {\n        return {\n          id: doc.id,\n          title: doc.data().title,\n          description: doc.data().description,\n          datetime: doc.data().datetime\n        };\n      }));\n    });\n  }, []);\n  {\n    /* Insert ------------------------------------------- */\n  }\n\n  const addlist = async event => {\n    try {\n      event.preventDefault();\n      await db.collection('users').add({\n        title: userInfo.title,\n        description: userInfo.description,\n        datetime: firebase.firestore.FieldValue.serverTimestamp()\n      });\n      setuserInfo({ ...userInfo,\n        title: '',\n        description: ''\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  {\n    /* Edit ------------------------------------------- */\n  }\n\n  const Update = items => {\n    setOpen(true);\n    setEdit(items.id);\n    setuserInfo({ ...userInfo,\n      title: items.title,\n      description: items.description\n    });\n  };\n\n  const editlist = async event => {\n    try {\n      event.preventDefault();\n      db.collection('users').doc(isEdit).update({\n        title: userInfo.title,\n        description: userInfo.description\n      });\n      setOpen(false);\n      setEdit(null);\n      setuserInfo({ ...userInfo,\n        title: '',\n        description: ''\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  {\n    /* Delete ------------------------------------------- */\n  }\n\n  const Delete = id => {\n    db.collection('users').doc(id).delete().then(res => {\n      console.log('Deleted!', res);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" React Firebase Firestore CRUD Operations \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: isOpen === false && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: addlist,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            value: userInfo.title,\n            onChange: onChangeValue,\n            placeholder: \" Title \",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"desc\",\n            name: \"description\",\n            value: userInfo.description,\n            onChange: onChangeValue,\n            placeholder: \" Description \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn__default btn__add\",\n            children: \" Add \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), isUsers.map((items, index) => {\n        var _items$datetime;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrapper__list\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \" Title : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 16\n              }, this), \" \", items.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \" Description : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 16\n              }, this), items.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \" Date : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 16\n              }, this), (_items$datetime = items.datetime) === null || _items$datetime === void 0 ? void 0 : _items$datetime.toDate().toLocaleDateString(\"en-US\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"update__list\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => Update(items),\n                className: \"btn__default btn__edit\",\n                children: \" Edit \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => Delete(items.id),\n                className: \"btn__default btn__delete\",\n                children: \" delete \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this), isOpen === true && isEdit === items.id && /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: editlist,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"title\",\n                name: \"title\",\n                value: userInfo.title,\n                onChange: onChangeValue,\n                placeholder: \" Title \",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"desc\",\n                name: \"description\",\n                value: userInfo.description,\n                onChange: onChangeValue,\n                placeholder: \" Description \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn__default btn__add\",\n                children: \" Save \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this)\n        }, items.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"8hVvL1T0g++h2pp2vjkODLf6bN8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Crud/crud/src/App.js"],"names":["React","useState","useEffect","db","firebase","App","userInfo","setuserInfo","title","description","isUsers","setUsers","isOpen","setOpen","isEdit","setEdit","onChangeValue","e","target","name","value","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","datetime","addlist","event","preventDefault","add","firestore","FieldValue","serverTimestamp","error","Update","items","editlist","update","Delete","delete","then","res","console","log","index","toDate","toLocaleDateString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport db from './firebase-config'\nimport firebase from 'firebase/compat/app';\nimport './App.css';\n\nconst App = () => {\n  const [userInfo, setuserInfo] = useState({\n    title: '',\n    description: '',\n  });\n  const [isUsers, setUsers] = useState([]);\n  const [isOpen, setOpen] = useState(false);\n  const [isEdit, setEdit] = useState(null);\n  const onChangeValue = (e) => {\n    setuserInfo({\n      ...userInfo,\n      [e.target.name]:e.target.value\n    });\n  } \n{/* Fetch ------------------------------------------- */}  \n  useEffect(() => {\n    db.collection('users').orderBy('datetime', 'desc').onSnapshot(snapshot => {\n      setUsers(snapshot.docs.map(doc => {\n        return {\n          id: doc.id,\n          title: doc.data().title,\n          description: doc.data().description,\n          datetime: doc.data().datetime\n        }\n      }))\n    })\n  }, []);\n{/* Insert ------------------------------------------- */}\n  const addlist = async(event) => {\n    try {\n      event.preventDefault();\n      await db.collection('users').add({\n        title: userInfo.title,\n        description: userInfo.description,\n        datetime: firebase.firestore.FieldValue.serverTimestamp()\n      })\n      setuserInfo({...userInfo,\n        title:'',\n        description: '',\n      });\n    } catch (error) { throw error;}  \n  }\n{/* Edit ------------------------------------------- */}\n  const Update = (items) => {\n    setOpen(true);\n    setEdit(items.id);\n    setuserInfo({...userInfo,\n      title:items.title,\n      description: items.description,\n    });\n  }\n  const editlist = async(event) => {\n    try {\n      event.preventDefault();\n      db.collection('users').doc(isEdit).update({\n        title: userInfo.title,\n        description: userInfo.description,\n      });\n      setOpen(false);\n      setEdit(null);\n      setuserInfo({...userInfo,\n        title:'',\n        description: '',\n      });\n    } catch (error) { throw error;}  \n  }\n{/* Delete ------------------------------------------- */}\n  const Delete = (id) => {\n    db.collection('users').doc(id).delete().then(res => {\n      console.log('Deleted!', res);\n    });\n  }\n  \n  return (<>\n    <div className=\"App\">\n      <h1> React Firebase Firestore CRUD Operations </h1>\n      <div className=\"wrapper\">\n        {/* Insert users -------------------------------------------*/}\n        {isOpen === false &&\n          <form onSubmit={addlist}>\n            <input type=\"text\" id=\"title\"  name=\"title\" value={userInfo.title} onChange={onChangeValue} placeholder=\" Title \" required />\n            <textarea id=\"desc\" name=\"description\" value={userInfo.description} onChange={onChangeValue} placeholder=\" Description \"  />\n            <button type=\"submit\" className=\"btn__default btn__add\" > Add </button>  \n          </form>\n        } \n      </div>\n      {/* Fetch users ------------------------------------------------*/}\n      {isUsers.map((items,index) => (\n        <div key={items.id} >\n          <div className=\"wrapper__list\">\n            <p><b> Title : </b> {items.title}</p>\n            <p><b> Description : </b>{items.description}</p>\n            <p><b> Date : </b>{items.datetime?.toDate().toLocaleDateString(\"en-US\")}</p>  \n            <div className=\"update__list\"> \n              <button onClick={()=>Update(items)}  className=\"btn__default btn__edit\"> Edit </button>\n              <button onClick={()=>Delete(items.id)}  className=\"btn__default btn__delete\"> delete </button>\n            </div>\n            {/* Edit users ------------------------------------------- */}\n            {isOpen === true && isEdit === items.id &&\n              <form onSubmit={editlist}>\n                <input type=\"text\" id=\"title\"  name=\"title\" value={userInfo.title} onChange={onChangeValue} placeholder=\" Title \" required />\n                <textarea id=\"desc\" name=\"description\" value={userInfo.description} onChange={onChangeValue} placeholder=\" Description \"  />\n                <button type=\"submit\" className=\"btn__default btn__add\" > Save </button>  \n              </form>\n            }           \n          </div>    \n        </div>\n      ))}\n    </div>\n  </>)\n}\nexport default App"]},"metadata":{},"sourceType":"module"}